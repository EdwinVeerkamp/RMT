apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'

repositories {
    mavenCentral()
    mavenRepo name: "Spring Maven MILESTONE Repository", urls: ["http://maven.springframework.org/milestone"]
}

configurations {
    provided
}

// version properties
version_spring = "3.0.5.RELEASE"
version_wicket = "1.+"
version_hibernate = "3.6.4.Final"
version_scala = "2.+"


dependencies {
    compile(
            'org.springframework:spring-core:' + version_spring,
            'org.springframework:spring-context:' + version_spring,
            'org.springframework.security:spring-security-web:' + version_spring,
            'org.apache.wicket:wicket:' + version_wicket,
            'org.apache.wicket:wicket-extensions:' + version_wicket,
            'org.apache.wicket:wicket-spring:' + version_wicket,
            'org.hibernate:hibernate-validator:4.1.0.Final',
            'org.hibernate:hibernate-entitymanager:' + version_hibernate,
            'org.springframework.data:spring-data-jpa:1.0.0.RC1',
            'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.0.Final',
            'org.hibernate:hibernate-core:' + version_hibernate,
            'commons-beanutils:commons-beanutils:1.+',
            'commons-collections:commons-collections:3.+',
            'commons-lang:commons-lang:2.+',
            'ch.qos.logback:logback-classic:+',
            'com.google.guava:guava:+',
            // TODO - jar needed for idea to use apt during compilation. possible to move to other configuration?
            'org.hibernate:hibernate-jpamodelgen:1.1.1.Final'
    )
    runtime(
            'org.slf4j:jcl-over-slf4j:1.+',
            'commons-dbcp:commons-dbcp:1.+',
            'org.hibernate:hibernate-core:' + version_hibernate,
            'mysql:mysql-connector-java:5.1.16',
            'org.springframework.security:spring-security-web:' + version_spring,
            'org.springframework.security:spring-security-config:' + version_spring
    )
    provided(

    )
    testCompile(
            'org.springframework:spring-test:' + version_spring,
            'com.h2database:h2:1.+',
            'org.dbunit:dbunit:2.+',
            'org.scala-lang:scala-library:' + version_scala,
            'org.testng:testng:6.+',
            'org.scalatest:scalatest:1.+',
            'org.mockito:mockito-core:1.+',
            'javax.servlet:servlet-api:2.5'
    )
    scalaTools(
            'org.scala-lang:scala-compiler:' + version_scala,
            'org.scala-lang:scala-library:' + version_scala
    )

}

// wicket app: need to copy .html files from java-src to output
sourceSets.main.resources.srcDirs('/src/main/java')
sourceSets.test.resources.srcDirs('/src/test/java')
sourceSets.test.resources.srcDirs('/src/test/scala')

// add directory with db-unit files to test-classpath
sourceSets.test.resources.srcDirs('/src/test/database')
/**
 * It's currently not possible to capture the console output of the tests.
 * Until it is fixed (http://issues.gradle.org/browse/GRADLE-1009) use the
 * log-file.
 */
test {
    useTestNG()
}

/**
 * Use this task to update idea project file with dependencies.
 * It will remove existing dependencies before updating them.
 */
ideaModule {
    beforeConfigured { module ->
        module.dependencies.clear()
    }
}